# -*- coding: utf-8 -*-
"""TEAM PAPER-FLY(random_forest_confusion_matrix).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1u6CAAOpu0AlSMf1_xzVbK2GZRddBnW1l
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df=pd.read_csv("/content/heart.csv", sep=",", low_memory=True)

df.head()

df.shape

df.describe()

legit = df[0:515].drop(['target'], axis=1)
dfData = df[515::].drop(['target'], axis=1)
print("The shape of the legit dataset is: %s samples, %s features" %(legit.shape[0], legit.shape[0]))
print("The shape of the mal dataset is: %s samples, %s features" %(dfData.shape[0], dfData.shape[0]))

fig = plt.figure()
ax = fig.add_axes([0,0,1,1])
ax.hist(df['target'],20)
plt.show()

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(df, y, test_size=0.2, random_state=42)
x_train.shape

from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import make_classification
clf = RandomForestClassifier(max_leaf_nodes=2, random_state=0)
randomModel = clf.fit(x_train, y_train)

"""Random Forest"""

from sklearn.metrics import f1_score, accuracy_score, plot_confusion_matrix, auc, confusion_matrix

train_pred = randomModel.predict(x_train)
accuracy_score(y_train, train_pred)

prediction = randomModel.predict(x_test)
accuracy_score(y_test, prediction)

f1_score(y_test, prediction)

from locale import normalize
titles_options = [("Confusion matrix, without normalization", None),
                  ("Normalized confusion matrix", "true")]
for title, normalize in titles_options:
  disp = plot_confusion_matrix(randomModel, x_test, y_test,
                               display_labels = "target",
                               cmap=plt.cm.Blues, normalize=normalize)
  disp.ax_.set_title(title)
  print(title)
  print(disp.confusion_matrix)

  plt.show()